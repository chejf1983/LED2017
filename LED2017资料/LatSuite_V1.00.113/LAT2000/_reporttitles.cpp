// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "_reporttitles.h"

// Dispatch interfaces referenced by this interface
#include "_reporttitle.h"


/////////////////////////////////////////////////////////////////////////////
// C_ReportTitles properties

/////////////////////////////////////////////////////////////////////////////
// C_ReportTitles operations

void C_ReportTitles::Add(LPDISPATCH ReportTitle)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x60030002, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ReportTitle);
}

C_ReportTitle C_ReportTitles::AddBlankReportTitle()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x60030003, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return C_ReportTitle(pDispatch);
}

void C_ReportTitles::Remove(short Index)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x60030004, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Index);
}

void C_ReportTitles::Clear()
{
	InvokeHelper(0x60030005, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

short C_ReportTitles::Count()
{
	short result;
	InvokeHelper(0x60030006, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

C_ReportTitle C_ReportTitles::Item(short Index)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x60030007, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		Index);
	return C_ReportTitle(pDispatch);
}
