#if !defined(AFX_IPLOTAXISX_H__8E81FF8A_1A5E_465E_B9D8_9EA645FA23B8__INCLUDED_)
#define AFX_IPLOTAXISX_H__8E81FF8A_1A5E_465E_B9D8_9EA645FA23B8__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CiPlotAxisX wrapper class

class CiPlotAxisX : public COleDispatchDriver
{
public:
	CiPlotAxisX() {}		// Calls COleDispatchDriver default constructor
	CiPlotAxisX(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CiPlotAxisX(const CiPlotAxisX& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	CString GetName();
	void SetName(LPCTSTR lpszNewValue);
	BOOL GetVisible();
	void SetVisible(BOOL bNewValue);
	double GetStartPercent();
	void SetStartPercent(double newValue);
	double GetStopPercent();
	void SetStopPercent(double newValue);
	double GetMin();
	void SetMin(double newValue);
	double GetSpan();
	void SetSpan(double newValue);
	double GetMax();
	BOOL GetReverseScale();
	void SetReverseScale(BOOL bNewValue);
	long GetInnerMargin();
	void SetInnerMargin(long nNewValue);
	long GetOuterMargin();
	void SetOuterMargin(long nNewValue);
	CString GetTitle();
	void SetTitle(LPCTSTR lpszNewValue);
	double GetTitleMargin();
	void SetTitleMargin(double newValue);
	COleFont GetTitleFont();
	void SetTitleFont(LPDISPATCH newValue);
	BOOL GetTitleShow();
	void SetTitleShow(BOOL bNewValue);
	long GetMajorLength();
	void SetMajorLength(long nNewValue);
	long GetMinorLength();
	void SetMinorLength(long nNewValue);
	long GetMinorCount();
	void SetMinorCount(long nNewValue);
	double GetLabelsMargin();
	void SetLabelsMargin(double newValue);
	COleFont GetLabelsFont();
	void SetLabelsFont(LPDISPATCH newValue);
	long GetLabelsPrecisionStyle();
	void SetLabelsPrecisionStyle(long nNewValue);
	long GetLabelsPrecision();
	void SetLabelsPrecision(long nNewValue);
	double GetLabelsMinLength();
	void SetLabelsMinLength(double newValue);
	double GetLabelSeparation();
	void SetLabelSeparation(double newValue);
	long GetLabelsFormatStyle();
	void SetLabelsFormatStyle(long nNewValue);
	CString GetDateTimeFormat();
	void SetDateTimeFormat(LPCTSTR lpszNewValue);
	BOOL GetScaleLineShow();
	void SetScaleLineShow(BOOL bNewValue);
	unsigned long GetScaleLinesColor();
	void SetScaleLinesColor(unsigned long newValue);
	double GetStackingEndsMargin();
	void SetStackingEndsMargin(double newValue);
	long GetScaleType();
	void SetScaleType(long nNewValue);
	BOOL GetTrackingEnabled();
	void SetTrackingEnabled(BOOL bNewValue);
	long GetTrackingStyle();
	void SetTrackingStyle(long nNewValue);
	long GetTrackingAlignFirstStyle();
	void SetTrackingAlignFirstStyle(long nNewValue);
	double GetTrackingScrollCompressMax();
	void SetTrackingScrollCompressMax(double newValue);
	CString GetLabelText(double Value);
	void NewTrackingData(double Value);
	void ResetFirstAlign();
	void Zoom(double Value);
	long PositionToPixels(double Value);
	double PixelsToPosition(long Value);
	BOOL ValueOnScale(double Value);
	long GetZOrder();
	void SetZOrder(long nNewValue);
	BOOL GetHorizontal();
	void SetHorizontal(BOOL bNewValue);
	unsigned long GetTitleFontColor();
	void SetTitleFontColor(unsigned long newValue);
	unsigned long GetLabelsFontColor();
	void SetLabelsFontColor(unsigned long newValue);
	BOOL GetLabelsMinLengthAutoAdjust();
	void SetLabelsMinLengthAutoAdjust(BOOL bNewValue);
	void UpdateResumeValues();
	double GetDesiredIncrement();
	void SetDesiredIncrement(double newValue);
	long GetCursorPrecision();
	void SetCursorPrecision(long nNewValue);
	double GetCursorScaler();
	void SetCursorScaler(double newValue);
	BOOL GetEnabled();
	void SetEnabled(BOOL bNewValue);
	BOOL GetPopupEnabled();
	void SetPopupEnabled(BOOL bNewValue);
	BOOL GetRestoreValuesOnResume();
	void SetRestoreValuesOnResume(BOOL bNewValue);
	long GetWidth();
	long GetHeight();
	BOOL GetScrollMinMaxEnabled();
	void SetScrollMinMaxEnabled(BOOL bNewValue);
	double GetScrollMax();
	void SetScrollMax(double newValue);
	double GetScrollMin();
	void SetScrollMin(double newValue);
	BOOL GetMasterUIInput();
	void SetMasterUIInput(BOOL bNewValue);
	double GetDesiredStart();
	void SetDesiredStart(double newValue);
	double PositionToPercent(double Value);
	double PercentToPosition(double Value);
	void ZoomToFit();
	BOOL GetLabelsVisible();
	void SetLabelsVisible(BOOL bNewValue);
	long GetCartesianStyle();
	void SetCartesianStyle(long nNewValue);
	CString GetCartesianChildRefAxisName();
	void SetCartesianChildRefAxisName(LPCTSTR lpszNewValue);
	double GetCartesianChildRefValue();
	void SetCartesianChildRefValue(double newValue);
	BOOL GetGridLinesVisible();
	void SetGridLinesVisible(BOOL bNewValue);
	long GetLayer();
	void SetLayer(long nNewValue);
	BOOL GetScaleLinesShow();
	void SetScaleLinesShow(BOOL bNewValue);
	BOOL GetCursorUseDefaultFormat();
	void SetCursorUseDefaultFormat(BOOL bNewValue);
	long GetCursorFormatStyle();
	void SetCursorFormatStyle(long nNewValue);
	CString GetCursorDateTimeFormat();
	void SetCursorDateTimeFormat(LPCTSTR lpszNewValue);
	long GetCursorPrecisionStyle();
	void SetCursorPrecisionStyle(long nNewValue);
	double GetCursorMinLength();
	void SetCursorMinLength(double newValue);
	BOOL GetCursorMinLengthAutoAdjust();
	void SetCursorMinLengthAutoAdjust(BOOL bNewValue);
	BOOL GetLegendUseDefaultFormat();
	void SetLegendUseDefaultFormat(BOOL bNewValue);
	long GetLegendFormatStyle();
	void SetLegendFormatStyle(long nNewValue);
	CString GetLegendDateTimeFormat();
	void SetLegendDateTimeFormat(LPCTSTR lpszNewValue);
	long GetLegendPrecisionStyle();
	void SetLegendPrecisionStyle(long nNewValue);
	long GetLegendPrecision();
	void SetLegendPrecision(long nNewValue);
	double GetLegendMinLength();
	void SetLegendMinLength(double newValue);
	BOOL GetLegendMinLengthAutoAdjust();
	void SetLegendMinLengthAutoAdjust(BOOL bNewValue);
	BOOL GetUserSelected();
	void SetUserSelected(BOOL bNewValue);
	void TickListClear();
	void TickListAdd(double Position, LPCTSTR ALabel, long Style);
	BOOL GetTickListCustom();
	void SetTickListCustom(BOOL bNewValue);
	long GetTickListCount();
	CString GetTickListItemLabel(long Index);
	void SetTickListItemLabel(long Index, LPCTSTR lpszNewValue);
	double GetTickListItemPosition(long Index);
	void SetTickListItemPosition(long Index, double newValue);
	long GetTickListItemStyle(long Index);
	void SetTickListItemStyle(long Index, long nNewValue);
	CString GetAlignRefAxisName();
	void SetAlignRefAxisName(LPCTSTR lpszNewValue);
	BOOL GetForceStacking();
	void SetForceStacking(BOOL bNewValue);
	void SetMinSpan(double NewMin, double NewSpan);
	void ZoomToFitFast();
	long GetLabelsRotation();
	void SetLabelsRotation(long nNewValue);
	CString GetCursorText(double Value);
	CString GetLegendText(double Value);
	long WidthToPixels(double Value);
	long GetMinPixels();
	long GetMaxPixels();
	long GetMode();
	void SetMode(long nNewValue);
	BOOL GetTitleRotated();
	void SetTitleRotated(BOOL bNewValue);
	BOOL HitTest(long X, long Y);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_IPLOTAXISX_H__8E81FF8A_1A5E_465E_B9D8_9EA645FA23B8__INCLUDED_)
